<?php

namespace Proxies\__CG__\Proyecto\UsuarioBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Usuario extends \Proyecto\UsuarioBundle\Entity\Usuario implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getUseName()
    {
        $this->__load();
        return parent::getUseName();
    }

    public function setUseName($useName)
    {
        $this->__load();
        return parent::setUseName($useName);
    }

    public function getUseDependencia()
    {
        $this->__load();
        return parent::getUseDependencia();
    }

    public function setUseDependencia($useDependencia)
    {
        $this->__load();
        return parent::setUseDependencia($useDependencia);
    }

    public function getUsePhone()
    {
        $this->__load();
        return parent::getUsePhone();
    }

    public function setUsePhone($usePhone)
    {
        $this->__load();
        return parent::setUsePhone($usePhone);
    }

    public function getUseEmail()
    {
        $this->__load();
        return parent::getUseEmail();
    }

    public function setUseEmail($useEmail)
    {
        $this->__load();
        return parent::setUseEmail($useEmail);
    }

    public function getUseLogin()
    {
        $this->__load();
        return parent::getUseLogin();
    }

    public function setUseLogin($useLogin)
    {
        $this->__load();
        return parent::setUseLogin($useLogin);
    }

    public function getUsePassword()
    {
        $this->__load();
        return parent::getUsePassword();
    }

    public function setUsePassword($usePassword)
    {
        $this->__load();
        return parent::setUsePassword($usePassword);
    }

    public function getUseOriginal()
    {
        $this->__load();
        return parent::getUseOriginal();
    }

    public function setUseOriginal($useOriginal)
    {
        $this->__load();
        return parent::setUseOriginal($useOriginal);
    }

    public function getUseRename()
    {
        $this->__load();
        return parent::getUseRename();
    }

    public function setUseRename($useRename)
    {
        $this->__load();
        return parent::setUseRename($useRename);
    }

    public function getUseStatus()
    {
        $this->__load();
        return parent::getUseStatus();
    }

    public function setUseStatus($useStatus)
    {
        $this->__load();
        return parent::setUseStatus($useStatus);
    }

    public function getUseType()
    {
        $this->__load();
        return parent::getUseType();
    }

    public function setUseType($useType)
    {
        $this->__load();
        return parent::setUseType($useType);
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'useName', 'useDependencia', 'usePhone', 'useEmail', 'useLogin', 'usePassword', 'useOriginal', 'useRename', 'useStatus', 'useType');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}